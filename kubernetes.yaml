apiVersion: v1
kind: ConfigMap
metadata:
  name: 'pic-it-configmap'
data:
  HOST: 'mysql-service'
  PORT: '3306'
  TIMEOUT: '20'
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
type: Opaque
data:
  # The comments are obviously insecure, this is a demo!
  mysql-root-pass: cGFzc3dvcmQ= #password
  mysql-user: YWRtaW4= #admin
  mysql-pass: cGFzc3dvcmQ= #password
  mysql-db: ZGI= #db

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  labels:
    app: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-root-pass
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-user
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-db
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-pass
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: server-deployment
  labels:
    app: server
spec:
  replicas: 2
  selector:
    matchLabels:
      app: server
  template:
    metadata:
      labels:
        app: server
    spec:
      containers:
        - name: server
          image: ericmarcantonio/pic-it-server
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          resources:
            requests:
              memory: '500m'
              cpu: '200m'
            limits:
              memory: '1Gi'
              cpu: '500m'
          env:
            - name: USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-user
            - name: PASS
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-pass
            - name: HOST
              valueFrom:
                configMapKeyRef:
                  name: pic-it-configmap
                  key: HOST
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: pic-it-configmap
                  key: PORT
            - name: DB
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-db
            - name: TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: pic-it-configmap
                  key: TIMEOUT
---
apiVersion: v1
kind: Service
metadata:
  name: server-external-service
spec:
  selector:
    app: server
  ports:
    - port: 8000
      protocol: TCP
      targetPort: 8000
      nodePort: 30000
  type: LoadBalancer
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: server-scaler
spec:
  minReplicas: 2
  maxReplicas: 30
  scaleTargetRef:
    kind: Deployment
    name: server-deployment
  metrics:
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 100Mi
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 10
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-user
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-user
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: admin-user
    namespace: kube-system